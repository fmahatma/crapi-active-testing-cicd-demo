name: Build and Test crAPI
on:
  push:
  workflow_dispatch:

env:
  ACTIVE_API_URL: ${{secrets.ACTIVE_API_URL}}
  ACTIVE_APP_ID: ${{secrets.ACTIVE_APP_ID}}
  ACTIVE_REGISTRY_URL: ${{secrets.ACTIVE_REGISTRY_URL}}
  TEST_GROUP_ID: 3f2e79c7-f237-417f-94a0-e50f07713d3d

jobs:
  build-and-test-images:
    runs-on: ubuntu-20.04
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build images
        run: ./deploy/docker/build-all.sh
        env:
          DOCKER_REPO: location
          VERSION: testing
      - name: Launch crAPI
        run: docker compose up -d
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Stage data for testing
        run: |
          npm install
          node .
        working-directory: baseline-script
        env:
          USERS_TO_SIMULATE: 1

      - name: Docker login for Noname CLI
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ACTIVE_REGISTRY_URL }}
          username: ${{ secrets.ACTIVE_REGISTRY_USER }}
          password: ${{ secrets.ACTIVE_REGISTRY_PASSWORD }}

      - name: Active Testing Scan
        run: >
          docker run
          --add-host=host.docker.internal:host-gateway
          -e ACTIVE_CONFIG_FILE_PATH=/noname/active-config.json
          -v $(pwd)/noname:/noname
          ${{env.ACTIVE_REGISTRY_URL}}/active-cli:$(curl -k ${{env.ACTIVE_API_URL}}/backend/version) scan
          --api-url=${{ env.ACTIVE_API_URL }}
          --api-token=${{ secrets.ACTIVE_API_TOKEN }}
          --test-group-id=${{ env.TEST_GROUP_ID }}
          --branch-name=${{ github.head_ref || github.ref_name }}
          --severity-threshold=none
